@page
@model DemoPRN1.Pages.Custommer.CartModel
@{
    Layout = "/Pages/Shared/_LayoutUser.cshtml";
}


    <section class="Cart h-100 h-custom">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12">
                    <div class="card card-registration card-registration-2"
                         style="border-radius: 15px">
                        <div class="card-body p-0" style="width:125%">
                            <div class="row g-0">
                                <div class="col-lg-8">
                                    <div class="p-5">
                                        <div class="d-flex justify-content-between align-items-center mb-5">
                                            <h1 class="fw-bold mb-0">Giỏ hàng</h1>
                                            <h6 class="mb-0 text-muted">@Model.Items.Count items</h6>
                                        </div>
                                        <hr class="my-4" />
                                        @if (Model.Items.Count == 0)
                                        {
                                            <h2>Giỏ hàng trống</h2>
                                        }
                                        @foreach (var item in Model.Items)
                                        {
                                            <div class="row mb-4 d-flex justify-content-between align-items-center">
                                                <div class="col-md-2 col-lg-2 col-xl-2">
                                                    <img src="@Url.Content(@item.book.Image)" class="img-fluid rounded-3" alt="@item.book.BookTitle" />
                                                </div>
                                                <div class="col-md-2 col-lg-2 col-xl-2">
                                                    <h6 class="text-muted">@item.book.Category.CategoryName</h6>
                                                    <h6 class="text-muted">Type: @item.type</h6>
                                                    <h6 class="mb-0">@item.book.BookTitle</h6>
                                                </div>
                                                <div class="col-md-2 col-lg-2 col-xl-2 d-flex">
                                                    <button data-mdb-button-init data-mdb-ripple-init class="btn btn-link px-2" onclick="this.parentNode.querySelector('input[type=number]').stepDown()">
                                                        <i class="fas fa-minus"></i>
                                                    </button>


                                                    <input style="width: 50%" value="@item.quantity" type="number" id="quantity-@item.book.BookId-@item.type" onchange="updateQuantity(@item.book.BookId, '@item.type')">

                                                    <button data-mdb-button-init data-mdb-ripple-init class="btn btn-link px-2" onclick="this.parentNode.querySelector('input[type=number]').stepUp()">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                </div>

                                                <div class="col-md-2 col-lg-2 col-xl-1 text-end">
                                                    <h6 class="mb-0">
                                                        @{
                                                            var text = item.type.Equals("buy") ? String.Format("{0:N0} đ", item.book.Price) : String.Format("{0:N0} đ", item.book.RentalPrice) + " per day";
                                                        } @text
                                                    </h6>
                                                </div>
                                                @{
                                                    // Lấy ngày hiện tại
                                                    var today = DateTime.Today.ToString("yyyy-MM-dd");
                                                }

                                                <div class="col-md-2 col-lg-2 col-xl-2 text-center">
                                                    @if (item.type.Equals("rent"))
                                                    {
                                                        <h6 class="text-muted">Ngày thuê</h6>
                                                        <!-- Start date input with today's date as the minimum -->
                                                        <input type="date" class="mb-0"
                                                               value="@(item.startDate?.ToString("yyyy-MM-dd") ?? DateTime.Today.ToString("yyyy-MM-dd"))"
                                                               min="@DateTime.Today.ToString("yyyy-MM-dd")"
                                                               id="rentDate1"
                                                               onchange="updateSecondDateMin()" />
                                                    }
                                                </div>

                                                <div class="col-md-2 col-lg-2 col-xl-2 text-center">
                                                    @if (item.type.Equals("rent"))
                                                    {
                                                        <h6 class="text-muted">Ngày trả</h6>
                                                        <!-- End date input with tomorrow's date as the minimum -->
                                                        <input type="date" class="mb-0"
                                                               value="@(item.endDate?.ToString("yyyy-MM-dd") ?? DateTime.Today.AddDays(1).ToString("yyyy-MM-dd"))"
                                                               min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")"
                                                               id="rentDate2" />
                                                    }
                                                </div>


                                                <script>
                                                    function updateSecondDateMin() {
                                                        // Lấy giá trị từ ô ngày đầu tiên
                                                        const date1 = document.getElementById("rentDate1").value;
                                                        const date2 = document.getElementById("rentDate2");

                                                        // Đặt giá trị min cho ô ngày thứ hai là ngày được chọn ở ô đầu tiên + 1 ngày
                                                        let nextDay = new Date(date1);
                                                        nextDay.setDate(nextDay.getDate() + 1);
                                                        date2.min = nextDay.toISOString().split('T')[0];

                                                        // Đặt giá trị cho ô ngày thứ hai nếu nó nhỏ hơn ngày được chọn ở ô đầu tiên
                                                        if (new Date(date2.value) <= new Date(date1)) {
                                                            date2.value = date2.min;
                                                        }
                                                    }
                                                </script>


                                            </div>
                                            <hr class="my-4" />
                                        }

                                        <div class="pt-5">
                                            <h6 class="mb-0">
                                                <a href="@Url.Page("/Custommer/ListBook")" class="text-body">
                                                    <i class="fas fa-long-arrow-alt-left me-2"></i>Quay lại
                                                </a>
                                            </h6>
                                        </div>
                                    </div>
                                </div>
                                <!--phần tính tổng tiền-->
                                <div class="col-lg-4 bg-body-tertiary">
                                    <div class="p-5">
                                        <h3 class="fw-bold mb-5 mt-2 pt-1">Tổng tiền</h3>
                                        <hr class="my-4" />

                                        <div id="order-summary">
                                            @{
                                                dynamic almostTotalPrice = 0;
                                                dynamic deposit = 0;
                                            }
                                            @foreach (var item in Model.Items)
                                            {
                                                <div class="d-flex justify-content-between mb-3">
                                                    <h5 class="text-uppercase">@item.type : @item.book.BookTitle</h5>
                                                    <h5>
                                                        @{
                                                            var price = item.type.Equals("buy")
                                                            ? String.Format("{0:N0} đ", item.book.Price * item.quantity)
                                                            : String.Format("{0:N0} đ", (item.book.RentalPrice) * item.quantity);

                                                            if (item.type.Equals("buy"))
                                                            {
                                                                almostTotalPrice += item.quantity * item.book.Price;
                                                            }
                                                            else
                                                            {
                                                                almostTotalPrice += item.quantity * (item.book.RentalPrice);
                                                                deposit += item.quantity * item.book.Price;
                                                            }
                                                        }

                                                        @price
                                                    </h5>
                                                </div>
                                            }

                                            <div class="d-flex justify-content-between mb-4">
                                                <h5 class="text-uppercase">Tiền cọc:</h5>
                                                <h5>@String.Format("{0:N0} đ", deposit)</h5>
                                            </div>

                                            <hr class="my-4" />

                                            <div class="d-flex justify-content-between mb-5">
                                                <h5 class="text-uppercase">Tổng: </h5>
                                                <h5>
                                                    @{
                                                        var total = deposit + almostTotalPrice;
                                                    }
                                                    @String.Format("{0:N0} đ", total)
                                                </h5>
                                            </div>
                                        </div>



                                    <form method="post"  asp-page-handler="Checkout">
                                        <input type="hidden" name="total" value="@total" />
                                        <button type="submit" class="btn btn-dark btn-block btn-lg">
                                            Thanh toán
                                        </button>
                                    </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>


    <script src="~/js/jquery-1.11.0.min.js"></script>
    <script src="~/https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
            crossorigin="anonymous"></script>
    <script src="~/js/plugins.js"></script>
    <script src="~/js/script.js"></script>

    @Html.AntiForgeryToken()  <!-- Thêm AntiForgery Token vào trang -->
    <!-- Giả sử hàm updateQuantity được định nghĩa trong tệp script bên dưới -->
    <script>
        function updateQuantity(bookId, type) {
            const inputId = `quantity-${bookId}-${type}`;
            // Lấy giá trị từ input
            const quantity = document.getElementById(inputId).value;

            var data = String(bookId) + "_" + String(type) + "_" + String(quantity);
            var token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: '/Custommer/Cart?handler=UpdateQuantity',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                headers: {
                    'RequestVerificationToken': token
                },
                success: function (response) {
                    updateOrderSummary();

                },
                error: function (xhr, status, error) {
                }
            });
        }
    </script>





    <script>
        function updateOrderSummary() {
            var items = @Html.Raw(Json.Serialize(Model.Items)); // Chuyển đổi Model.Items sang JSON và đưa vào JavaScript

            // Lấy dữ liệu từ Razor đã tính toán ở server
            var almostTotalPrice = 0; // Tổng tiền trước
            var deposit = 0; // Tiền đặt cọc
            console.log("Items:", items); // In ra danh sách items để kiểm tra


            var orderSummaryContent = '';

            // Duyệt qua items và tạo HTML tương ứng
            items.forEach(function (item) {
                var price = (item.type === "buy" ? item.book.Price : item.book.RentalPrice) * item.quantity;
                var priceText = new Intl.NumberFormat().format(price) + ' đ';
                console.log(item.book);
                console.log(item.book.BookTitle)

                console.log(item.type)
                // Cập nhật giá trị almostTotalPrice và deposit
                if (item.type === "buy") {
                    almostTotalPrice += price;
                } else {
                    almostTotalPrice += price;
                    deposit += item.book.Price * item.quantity;
                }

                // Tạo phần tử HTML cho từng item
                orderSummaryContent += `
                            <div class="d-flex justify-content-between mb-3">
                                <h5 class="text-uppercase">${item.type} : ${item.book.BookTitle}</h5>
                                <h5>${priceText}</h5>
                            </div>
                        `;
            });

            // Tính lại tổng tiền (total) sau khi cập nhật almostTotalPrice và deposit
            var total = deposit + almostTotalPrice;

            // Thêm Deposit và Total Price vào cuối
            orderSummaryContent += `
                        <div class="d-flex justify-content-between mb-4">
                            <h5 class="text-uppercase">Deposit:</h5>
                            <h5>${new Intl.NumberFormat().format(deposit)} đ</h5>
                        </div>
                        <hr class="my-4" />
                        <div class="d-flex justify-content-between mb-5">
                            <h5 class="text-uppercase">Total price</h5>
                            <h5>${new Intl.NumberFormat().format(total)} đ</h5>
                        </div>
                    `;

            // Cập nhật lại nội dung trong order-summary
            document.getElementById("order-summary").innerHTML = orderSummaryContent;
        }

    </script>





